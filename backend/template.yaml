AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Twitter like snsのテンプレートファイル

Globals:
  Function:
    Timeout: 30

Parameters:
  StageName:
    Type: "String"
    Default: "v1"
  Domain:
    Type: String
    # TODO: ドメイン名を指定する
    Default: ""
  TweetsTableName:
    Type: String
    Default: "Tweets"

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      MethodSettings:
        - DataTraceEnabled: false
          ResourcePath: "/*"
          HttpMethod: "*"

  GeneratePresignedUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
        - S3CrudPolicy:
            BucketName: twitter-like-storage
      PackageType: Image
      Events:
        GeneratePresignedUrl:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /api/upload_url
            Method: post
        GenerateDownloadUrl:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /api/download_url
            Method: post
      Environment:
        Variables:
          S3_BUCKET_NAME: "twitter-like-storage"
          S3_ENDPOINT_URL: "http://minio:9999"
    Metadata:
      Dockerfile: ./presigned_url/Dockerfile
      DockerContext: ./
      DockerTag: python3.9-v1

  TweetActionFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      PackageType: Image
      Events:
        TweetActionCreate:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /api/create_tweet
            Method: post
        TweetActionFetch:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /api/fetch_tweet
            Method: post
      Environment:
        Variables:
          DYNAMO_ENDPOINT_URL: "http://dynamodb-local:8000"
    Metadata:
      Dockerfile: ./tweet/Dockerfile
      DockerContext: ./
      DockerTag: python3.9-v1

  Tweets:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TweetsTableName
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  S3:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: twitter-like-storage
      VersioningConfiguration:
        Status: Enabled
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - PUT
              - GET
            AllowedOrigins:
              - !Ref Domain
            MaxAge: 3000

Outputs:
  GeneratePresignedUrlApi:
    Description: "API Gateway endpoint URL for Prod stage for Generate Presigned Url function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/api/upload_url/"
  GenerateDownloadUrlApi:
    Description: "API Gateway endpoint URL for Prod stage for Generate Download Url function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/api/download_url/"
  CreateTweetApi:
    Description: "API Gateway endpoint URL for Prod stage for TweetAction function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/api/create_tweet/"
  FetchTweetApi:
    Description: "API Gateway endpoint URL for Prod stage for TweetAction function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/api/fetch_tweet/"

  GeneratePresignedUrlFunction:
    Description: "Generate Presigned Url Lambda Function ARN"
    Value: !GetAtt GeneratePresignedUrlFunction.Arn
  TweetActionFunction:
    Description: "Tweet Action Function Lambda Function ARN"
    Value: !GetAtt TweetActionFunction.Arn

  GeneratePresignedUrlFunctionIamRole:
    Description: "Implicit IAM Role created for Generate Presigned Url function"
    Value: !GetAtt GeneratePresignedUrlFunctionRole.Arn
  TweetActionFunctionIamRole:
    Description: "Implicit IAM Role created for Tweet Action Function function"
    Value: !GetAtt TweetActionFunctionRole.Arn
